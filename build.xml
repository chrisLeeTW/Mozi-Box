<?xml version="1.0" encoding="UTF-8"?>
<project name="media-be-quote-api" default="full-build">
    <!-- Use this when the tools are managed by Composer in ${basedir}/vendor/bin -->
    <property name="phpcs" value="${project.basedir}/vendor/bin/phpcs"/>
    <property name="phpunit" value="${project.basedir}/vendor/bin/phpunit"/>
    <target name="full-build" depends="prepare,static-analysis,phpunit,-check-failure" description="Performs static analysis, runs the tests, and generates project documentation"/>
    <target name="static-analysis" depends="lint,phpcs-ci" description="Performs static analysis" />
    <target name="clean" unless="clean.done" description="Cleanup build artifacts">
        <delete dir="${project.basedir}/builds/reports/coverage"/>
        <delete dir="${project.basedir}/builds/reports/logs"/>
        <property name="clean.done" value="true"/>
    </target>
    <target name="prepare" unless="prepare.done" depends="clean" description="Prepare for build">
        <mkdir dir="${project.basedir}/builds/reports/coverage"/>
        <mkdir dir="${project.basedir}/builds/reports/logs"/>
        <property name="prepare.done" value="true"/>
    </target>
    <target name="lint" unless="lint.done" description="Perform syntax check of sourcecode files">
        <apply executable="php" taskname="lint">
            <arg value="-l" />
            <fileset dir="${project.basedir}/app">
                <include name="**/*.php" />
            </fileset>
            <fileset dir="${project.basedir}/tests">
                <include name="**/*.php" />
            </fileset>
        </apply>
        <property name="lint.done" value="true"/>
    </target>
    <target name="phpcs-ci" unless="phpcs.done" depends="prepare" description="Find coding standard violations using PHP_CodeSniffer and log result in XML format. Intended for usage within a continuous integration environment.">
        <exec executable="${phpcs}" dir="${project.basedir}/builds" returnProperty="result.phpcs" taskname="phpcs" passthru="true">
            <arg value="--report=checkstyle" />
            <arg value="--report-file=${project.basedir}/builds/reports/logs/phpcs.xml" />
        </exec>
        <property name="phpcs.done" value="true"/>
    </target>
    <target name="phpunit" unless="phpunit.done" depends="prepare" description="Run unit tests with PHPUnit">
        <exec executable="${phpunit}" returnProperty="result.phpunit" taskname="phpunit" logoutput="true" passthru="true">
            <arg value="--configuration"/>
            <arg path="${project.basedir}/builds/phpunit.xml"/>
        </exec>
        <property name="phpunit.done" value="true"/>
    </target>
    <target name="-check-failure">
        <fail message="PHPUnit did not finish successfully">
            <condition>
                <not>
                    <equals arg1="${result.phpunit}" arg2="0"/>
                </not>
            </condition>
        </fail>
        <fail message="PHPCS did not finish successfully">
            <condition>
                <not>
                    <equals arg1="${result.phpcs}" arg2="0"/>
                </not>
            </condition>
        </fail>
    </target>
</project>
